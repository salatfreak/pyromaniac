"""Create directory fields with specified ownership.

The result is intended to be added as an element to the `storage.directories`
list.

The *path* must be absolute unless the user name is specified, in which case
relative paths will be interpreted relative to the user's default home
directory.

The *user* and *group* arguments are passed through the *std.ownership*
component. See its documentation for further details.

**Examples:**
- Add absolute directory for root user: `std.directory("/dir")`
- Add read-only directory for "core" user in its home directory:
  `std.directory("dir", "core", mode=0o550)`
"""

(
    path: Path,                     # path to create the directory at in the final system
    user: int | str = None,         # user ID or name
    group: int | str | None = ...,  # group ID or name (defaults to the same as user)
    **fields: Any,                  # additional fields to take over as they are
)

---

# interpret relative to home
if not path.is_absolute() and isinstance(user, str):
    path = Path(f"/home/{user}", path)

# construct result
{'path': path, **_.ownership(user, group), **fields}
