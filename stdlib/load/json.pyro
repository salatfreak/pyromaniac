"""Load JSON from disk injecting variables using jinja.

* Load and inject: `load.json(_/"file.json", name="Alice")`

Jinja is only invoked if at least one variable is passed as keyword argument.

Jinja expressions will be serialized before inserting them into the document.
You can therefore safely inject structured data into your JSON document without
worrying about breaking JSON syntax. To insert raw strings into your document,
use the *raw* filter as in `{"greeting": "Hello, {{ name | raw }}!"}`.

:param path: path to file
:param vars: variables to pass to jinja renderer
:returns: loaded content as structured data
"""

(path: Path, **vars: Any)

---

from json import loads

content = path.read_text()

if vars != {}:
    from pyromaniac.compiler.code.jinja import json_env
    content = json_env.from_string(content).render(vars)

loads(content)
